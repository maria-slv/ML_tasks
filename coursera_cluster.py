# -*- coding: utf-8 -*-
"""coursera_cluster.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15_nJS7PMQntRLrUXI7odXItwQ8hhMOoU
"""

from numpy.lib.index_tricks import index_exp
import pandas as pd
f1 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/checkins.csv', skipinitialspace=True, sep='|')

f1 = f1.drop(labels = [0],axis = 0) # удалить неинформативную строку с индексом 0

f1.head()

f1.columns

f1 = f1.rename(str.strip, axis='columns') # избавляем заголовки столбцов от пробельных символов

# удалить строки в  которых нет координат (поля 'latitude', 'longitude' )
# f1.loc[(f1.latitude.isna()) & (f1.longitude.isna())]
f1 = f1.dropna(subset=['latitude', 'longitude'])

f1.count()

# subset = 100 000 
subset_area = f1.head(100000)

# сбросить индекс для новой выборки
subset_area.reset_index(drop=True, inplace=True)

subset_area

"""Кластеризация"""

import numpy as np
from sklearn.cluster import MeanShift, estimate_bandwidth

# список списков из двух значений numpy.ndarray
X = subset_area.loc[:, ['latitude', 'longitude']].values

ms = MeanShift(bandwidth=0.1, bin_seeding=True, min_bin_freq=15)
ms.fit(X)
labels = ms.labels_
cluster_centers = ms.cluster_centers_

labels_unique = np.unique(labels)
n_clusters_ = len(labels_unique)

print("number of estimated clusters : %d" % n_clusters_)

cluster_centers

# координаты офисов
office_adress = np.array(
[[33.751277, -118.188740],
[25.867736, -80.324116],
[51.503016, -0.075479],
[52.378894, 4.885084],
[39.366487, 117.036146],
[-33.868457, 151.205134]
])
# 33.751277, -118.188740 (Los Angeles)
# 25.867736, -80.324116 (Miami)
# 51.503016, -0.075479 (London)
# 52.378894, 4.885084 (Amsterdam)
# 39.366487, 117.036146 (Beijing)
# -33.868457, 151.205134 (Sydney)

office_adress.shape

# найти ближайший офис для каждого центра кластера
def distance(xa, ya, xb, yb):
  "расстояние между 2 точками"
  return ((xb - xa) ** 2 + (yb - ya) ** 2) ** 0.5
# для каждого центра кластера минимальное расстояние до одного из офисов
distPerOf = np.zeros(len(cluster_centers)) 
# словарь расстояние до ближайшего офиса и коордитаны этого центра кластера
dict_dist = {}
for j in range(len(cluster_centers)):
  mind = -1
  for i in office_adress:
    d = distance(*i, *cluster_centers[j])
    if d < mind or mind == -1:
      mind = d
  distPerOf[j] = mind
  dict_dist[mind] = cluster_centers[j]

# находим 20 ближайших к офисам центров кластеров
distPerOf.sort()
distPerOf[:20]

distPerOf[0]

# решение задачи - координаты ближайшего центра кластера (более 15 элементов)
dict_dist.get(distPerOf[0])



"""Визуализация точек и центров кластеров"""

import matplotlib.pyplot as plt

plt.figure(1)
plt.clf()

for k in range(n_clusters_):
    my_members = labels == k
    cluster_center = cluster_centers[k]

    # if (np.where(my_members == True, 1, 0).sum() < 15):
    #   print('kol =', np.where(my_members == True, 1, 0).sum())
    plt.plot(X[my_members, 0], X[my_members, 1], '^', markersize=4) # точки k-го кластера
    
    #центр k-го кластера
    plt.plot(       
        cluster_center[0],
        cluster_center[1],
        '*',
        markersize=14,
      )
plt.title("Estimated number of clusters: %d" % n_clusters_)
plt.show()



np.where(my_members == True, 1, 0).sum()

np.where(my_members == True, 1, 0).sum()

"""______________________"""